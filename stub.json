{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"import cv2\nfrom moviepy.editor import VideoFileClip\nimport datetime\n\ndef draw_lines_and_time(frame, t, fps):\n \n    # Calcula el tiempo en segundos\n    frame_number = frame.index  # Obtiene el número del frame\n    t = frame_number / fps  # Calcula el tiempo en segundos\n\n    # Dibujar las líneas como antes\n    cv2.line(frame, (300, 0), (1080, 400), (0, 255, 255), thickness=2)\n    cv2.line(frame, (500, 0), (500, 1080), (255, 255, 255), thickness=2)\n    cv2.line(frame, (1500, 0), (1200, 1080), (0, 255, 255), thickness=2)\n\n    # Convertir el tiempo en mm:ss:cc\n    milliseconds = int((t % 1) * 100)\n    time_str = f'{int(t // 60):02d}:{int(t % 60):02d}:{milliseconds:02d}'\n\n\n    # Configurar el estilo del texto\n    font = cv2.FONT_HERSHEY_SIMPLEX\n    font_scale = 1\n    font_color = (255, 255, 255) # Blanco\n    line_type = 2\n    position = (frame.shape[1] - 150, 50) # Esquina superior derecha\n\n    # Dibujar el tiempo en el frame\n    cv2.putText(frame, time_str, position, font, font_scale, font_color, line_type)\n\n    return frame\n\ndef process_video(input_video_path, output_video_path, fps):\n    clip = VideoFileClip(input_video_path)\n\n\n    # Modifica la línea donde se llama a draw_lines_and_time\n    # Usa 'fl' en lugar de 'fl_image' para poder pasar el tiempo 't'\n    modified_clip = clip.fl(lambda gf, t: draw_lines_and_time(gf(t), t, fps), apply_to=['mask', 'video', 'audio'])\n    modified_clip.write_videofile(output_video_path, codec='libx264', fps=fps)\n\n# Rutas de los videos\ninput_video_path = '/Volumes/EuropP25_23/Finales_Sesion_01/3_F_50_FR_SF1_Full Pool.mp4'\noutput_video_path = '/Volumes/EuropP25_23/Finales_Sesion_01/3_F_50_FR_SF1_Full Pool_ref.mp4'\nfps = 50  # Asegúrate de que esto coincida con el FPS de tu video\n\n# Procesar el video\nprocess_video(input_video_path, output_video_path, fps)","md5":"ae91b9936f38de0c67309c68b21fce2c"}]}